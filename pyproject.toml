[project]
name = "jira"
authors = [{name = "Ben Speakmon", email = "ben.speakmon@gmail.com"}]
maintainers = [{name = "Sorin Sbarnea", email = "sorin.sbarnea@gmail.com"}]
description = "Python library for interacting with JIRA via REST APIs."
requires-python = ">=3.9"
license = {text = "BSD-2-Clause"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
]
keywords = ["api", "atlassian", "jira", "rest", "web"]
dependencies = [
    "defusedxml",
    "packaging",
    "requests-oauthlib>=1.1.0",
    "requests>=2.10.0",
    "requests_toolbelt",
    "typing_extensions>=3.7.4.2",
]
dynamic = ["version"]

[project.readme]
file = "README.rst"
content-type = "text/x-rst; charset=UTF-8"
# Do not include ChangeLog in description-file due to multiple reasons:
# - Unicode chars, see https://github.com/pycontribs/jira/issues/512
# - Breaks ability to perform `python setup.py install`

[project.urls]
Homepage = "https://github.com/pycontribs/jira"
"Bug Tracker" = "https://github.com/pycontribs/jira/issues"
"Release Management" = "https://github.com/pycontribs/jira/projects"
"CI: GitHub Actions" = "https://github.com/pycontribs/jira/actions"
"Source Code" = "https://github.com/pycontribs/jira.git"
Documentation = "https://jira.readthedocs.io"
Forum = "https://community.atlassian.com/t5/tag/jira-python/tg-p?sort=recent"

[project.optional-dependencies]
cli = [
    "ipython>=4.0.0",
    "keyring",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-copybutton",
    # HTML Theme
    "furo",
]
opt = [
    "filemagic>=1.6",
    "PyJWT",
    "requests_jwt",
    "requests_kerberos",
]
async = ["requests-futures>=0.9.7"]
test = [
    "docutils>=0.21.2",
    "flaky",
    "MarkupSafe>=0.23",
    "oauthlib",
    "pytest-cache",
    "pytest-cov",
    "pytest-instafail",
    "pytest-sugar",
    "pytest-timeout>=1.3.1",
    "pytest-xdist>=2.2",
    "pytest>=6.0.0", # MIT
    "PyYAML>=5.1", # MIT
    "requests_mock", # Apache-2
    "requires.io", # UNKNOWN!!!
    "tenacity", # Apache-2
    "wheel>=0.24.0", # MIT
    "yanc>=0.3.3", # GPL
    "parameterized>=0.8.1", # BSD-3-Clause
]

[project.scripts]
jirashell = "jira.jirashell:main"

[tool.codespell]
check-filenames = true
check-hidden = true
quiet-level = 0
write-changes = true
enable-colors = true
skip = [
    "./.eggs",
    "./.git",
    "./.mypy_cache",
    "./.tox",
    "./build",
    "./docs/build",
    "./node_modules",
    "./pip-wheel-metadata",
    "./tests/icon.png",
    ".DS_Store",
    ".ruff_cache",
    "AUTHORS",
    "ChangeLog",
    "__pycache__",
    "coverage.xml",
    "dist",
]
builtin = ["clear", "rare", "usage", "names", "code"]
ignore-words = [".config/dictionary.txt"]

[tool.files]
packages = """
jira"""

[tool.setuptools]
include-package-data = true
zip-safe = false
platforms = ["any"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.package-data]
jira = ["jira/py.typed"]

[build-system]
requires = ["setuptools >= 60.0.0", "setuptools_scm[toml] >= 7.0.0"]
build-backend = "setuptools.build_meta"

# Setuptools config
# Equivalent to use_scm_version=True
[tool.setuptools_scm]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py", "tests.py"]
addopts = '''-p no:xdist --durations=10 --tb=long -rxX -v --color=yes
             --junitxml=build/results.xml
             --cov-report=xml --cov jira'''

# these are important for distributed testing, to speed up their execution we minimize what we sync
rsyncdirs = ". jira demo docs"
rsyncignore = ".git"

# pytest-timeout, delete_project on jira cloud takes >70s
timeout = 80

# avoid useless warnings related to coverage skips
filterwarnings = ["ignore::pytest.PytestWarning"]

markers = ["allow_on_cloud: opt in for the test to run on Jira Cloud"]

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
namespace_packages = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
check_untyped_defs = false
disable_error_code = "annotation-unchecked"

[tool.ruff]
# Same as Black.
line-length = 88

# Assume Python 3.9 (minimum supported)
target-version = "py39"

# The source code paths to consider, e.g., when resolving first- vs. third-party imports
src = ["jira", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pydocstyle
    "W",  # pydocstyle
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "D",  # docstrings
]
ignore = [
    "E501", # We have way too many "line too long" errors at the moment
    # TODO: Address these with time
    "D100",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D401",
    "D402",
    "D417",
    "UP006",
    "UP035",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["jira", "tests"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"jira/__init__.py" = [
    "E402", # ignore import order in this file
]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"
